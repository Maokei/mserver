plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.12.1'
}

group = 'se.maokei'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	implementation 'com.auth0:java-jwt:4.2.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'com.google.zxing:core:3.5.1'
	implementation 'com.google.zxing:javase:3.5.0'

	//implementation 'org.apache.tika:tika-core:2.4.1'
	implementation 'net.jthink:jaudiotagger:3.0.1'

	implementation 'org.springdoc:springdoc-openapi-webflux-core:1.6.12'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.12'
	implementation 'commons-io:commons-io:2.11.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.5.1'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.4.11'

	testImplementation 'org.testcontainers:mongodb:1.17.5'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}
